# Generated by Django 5.1.3 on 2025-04-07 09:31

import django.db.models.deletion
import django.utils.timezone
import super_admin.manager
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankNames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('status', models.BooleanField(default=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'bank_names',
            },
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shortname', models.CharField(max_length=5)),
                ('name', models.CharField(max_length=150)),
                ('phonecode', models.IntegerField(max_length=11)),
            ],
            options={
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='FeeReceiptOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('status', models.BooleanField(default=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'feereceipt_options',
            },
        ),
        migrations.CreateModel(
            name='ImportCsvData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('import_csv_data', models.FileField(blank=True, null=True, upload_to='Csv_Import/')),
            ],
            options={
                'db_table': 'importcsv',
            },
        ),
        migrations.CreateModel(
            name='OtherCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'other_course',
            },
        ),
        migrations.CreateModel(
            name='OtherStream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('stream_id', models.CharField(max_length=50)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'other_stream',
            },
        ),
        migrations.CreateModel(
            name='OtherSubStream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('substream_id', models.CharField(max_length=50)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'other_substream',
            },
        ),
        migrations.CreateModel(
            name='OtherUniversity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university_name', models.CharField(max_length=100)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'other_university',
            },
        ),
        migrations.CreateModel(
            name='PaymentModes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('status', models.BooleanField(default=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'payment_modes',
            },
        ),
        migrations.CreateModel(
            name='PersonalDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.CharField(max_length=50)),
                ('document_name', models.CharField(blank=True, max_length=50, null=True)),
                ('document_ID_no', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'personaldocuments',
            },
        ),
        migrations.CreateModel(
            name='SessionNames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('status', models.BooleanField(default=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'session_names',
            },
        ),
        migrations.CreateModel(
            name='TestDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transactionID', models.CharField(max_length=50)),
                ('mihpayid', models.CharField(blank=True, max_length=50, null=True)),
                ('mode', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('unmappedstatus', models.CharField(blank=True, max_length=50, null=True)),
                ('key', models.CharField(blank=True, max_length=50, null=True)),
                ('txnid', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.CharField(blank=True, max_length=50, null=True)),
                ('cardCategory', models.CharField(blank=True, max_length=50, null=True)),
                ('net_amount_debit', models.CharField(blank=True, max_length=50, null=True)),
                ('addedon', models.CharField(blank=True, max_length=50, null=True)),
                ('productinfo', models.CharField(blank=True, max_length=50, null=True)),
                ('firstname', models.CharField(blank=True, max_length=50, null=True)),
                ('lastname', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_source', models.CharField(blank=True, max_length=50, null=True)),
                ('PG_TYPE', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_ref_num', models.CharField(blank=True, max_length=50, null=True)),
                ('bankcode', models.CharField(blank=True, max_length=50, null=True)),
                ('name_on_card', models.CharField(blank=True, max_length=50, null=True)),
                ('cardnum', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'transactiondetails',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university_name', models.CharField(max_length=100)),
                ('university_address', models.CharField(blank=True, max_length=100, null=True)),
                ('university_city', models.CharField(blank=True, max_length=100, null=True)),
                ('university_state', models.CharField(blank=True, max_length=100, null=True)),
                ('university_pincode', models.CharField(blank=True, max_length=100, null=True)),
                ('university_logo', models.FileField(blank=True, null=True, upload_to='University_Logo/')),
                ('registrationID', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'university',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(max_length=14)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=80, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('is_data_entry', models.BooleanField(default=False)),
                ('is_fee_clerk', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', super_admin.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('examtype', models.CharField(blank=True, max_length=100, null=True)),
                ('examduration', models.CharField(blank=True, max_length=10, null=True)),
                ('studypattern', models.CharField(blank=True, max_length=20, null=True)),
                ('semyear', models.CharField(blank=True, max_length=20, null=True)),
                ('session', models.CharField(blank=True, max_length=20, null=True)),
                ('totalquestions', models.CharField(blank=True, max_length=10, null=True)),
                ('totalmarks', models.CharField(max_length=10)),
                ('passingmarks', models.CharField(blank=True, max_length=10, null=True)),
                ('active', models.BooleanField(default=True)),
                ('archive', models.BooleanField(default=False)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.course')),
            ],
            options={
                'db_table': 'examination',
            },
        ),
        migrations.CreateModel(
            name='OtherStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=100, null=True)),
                ('dateofbirth', models.DateField(blank=True, null=True)),
                ('mobile', models.CharField(max_length=14, unique=True)),
                ('alternate_mobile1', models.CharField(blank=True, max_length=14, null=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('alternateemail', models.EmailField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, max_length=15, null=True)),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('alternateaddress', models.CharField(blank=True, max_length=500, null=True)),
                ('nationality', models.CharField(blank=True, max_length=20, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('registration_id', models.CharField(max_length=20, unique=True)),
                ('old_university_enrollment_id', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('new_university_enrollment_id', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('enrollment_id', models.CharField(max_length=20, unique=True)),
                ('enrollment_date', models.DateField(auto_now=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='student_image_others/')),
                ('verified', models.BooleanField(default=False)),
                ('is_enrolled', models.BooleanField(default=False)),
                ('archive', models.BooleanField(default=False)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('student_remarks', models.CharField(default='', max_length=500)),
                ('registration_number', models.CharField(default='', max_length=100)),
                ('is_quick_register', models.BooleanField(default=False)),
                ('counselor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('reference_name', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='super_admin.cities')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='super_admin.countries')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'other_students',
            },
        ),
        migrations.CreateModel(
            name='OtherQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secondary_year', models.CharField(blank=True, max_length=10, null=True)),
                ('sr_year', models.CharField(blank=True, max_length=10, null=True)),
                ('under_year', models.CharField(blank=True, max_length=10, null=True)),
                ('post_year', models.CharField(blank=True, max_length=10, null=True)),
                ('mphil_year', models.CharField(blank=True, max_length=10, null=True)),
                ('secondary_board', models.CharField(blank=True, max_length=50, null=True)),
                ('sr_board', models.CharField(blank=True, max_length=50, null=True)),
                ('under_board', models.CharField(blank=True, max_length=50, null=True)),
                ('post_board', models.CharField(blank=True, max_length=50, null=True)),
                ('mphil_board', models.CharField(blank=True, max_length=50, null=True)),
                ('secondary_percentage', models.CharField(blank=True, max_length=10, null=True)),
                ('sr_percentage', models.CharField(blank=True, max_length=10, null=True)),
                ('under_percentage', models.CharField(blank=True, max_length=10, null=True)),
                ('post_percentage', models.CharField(blank=True, max_length=10, null=True)),
                ('mphil_percentage', models.CharField(blank=True, max_length=10, null=True)),
                ('secondary_document', models.FileField(blank=True, null=True, upload_to='University_Documents_Others/')),
                ('sr_document', models.FileField(blank=True, null=True, upload_to='University_Documents_Others/')),
                ('under_document', models.FileField(blank=True, null=True, upload_to='University_Documents_Others/')),
                ('post_document', models.FileField(blank=True, null=True, upload_to='University_Documents_Others/')),
                ('mphil_document', models.FileField(blank=True, null=True, upload_to='University_Documents_Others/')),
                ('others', models.JSONField(blank=True, default=list, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.otherstudent')),
            ],
            options={
                'db_table': 'other_qualification',
            },
        ),
        migrations.CreateModel(
            name='OtherPaymentReciept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_for', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_categories', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=30, null=True)),
                ('fee_reciept_type', models.CharField(blank=True, max_length=30, null=True)),
                ('transaction_date', models.CharField(blank=True, max_length=20, null=True)),
                ('cheque_no', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=50, null=True)),
                ('semyearfees', models.CharField(blank=True, max_length=10, null=True)),
                ('paidamount', models.CharField(blank=True, max_length=10, null=True)),
                ('pendingamount', models.CharField(blank=True, max_length=10, null=True)),
                ('advanceamount', models.CharField(blank=True, max_length=10, null=True)),
                ('transactiontime', models.DateTimeField(auto_now=True)),
                ('transactionID', models.CharField(max_length=50)),
                ('paymentmode', models.CharField(default='Online', max_length=20)),
                ('remarks', models.CharField(blank=True, max_length=500, null=True)),
                ('session', models.CharField(blank=True, max_length=100, null=True)),
                ('semyear', models.CharField(blank=True, max_length=10, null=True)),
                ('uncleared_amount', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.otherstudent')),
            ],
            options={
                'db_table': 'other_paymentreciept',
            },
        ),
        migrations.CreateModel(
            name='OtherStudentDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.CharField(max_length=50)),
                ('document_name', models.CharField(blank=True, max_length=50, null=True)),
                ('document_ID_no', models.CharField(blank=True, max_length=50, null=True)),
                ('document_image_front', models.FileField(blank=True, null=True, upload_to='student_documents/')),
                ('document_image_back', models.FileField(blank=True, null=True, upload_to='student_documents/')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.otherstudent')),
            ],
            options={
                'db_table': 'other_studentdocuments',
            },
        ),
        migrations.CreateModel(
            name='OtherEnrolled',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_pattern', models.CharField(blank=True, max_length=20, null=True)),
                ('session', models.CharField(blank=True, max_length=100, null=True)),
                ('entry_mode', models.CharField(blank=True, max_length=100, null=True)),
                ('total_semyear', models.CharField(blank=True, max_length=3, null=True)),
                ('current_semyear', models.CharField(blank=True, max_length=3, null=True)),
                ('remarks', models.CharField(default='', max_length=500)),
                ('university', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='super_admin.othercourse')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='super_admin.otherstream')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.otherstudent')),
                ('substream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='super_admin.othersubstream')),
                ('streamsity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='super_admin.otheruniversity')),
            ],
            options={
                'db_table': 'other_enrolled',
            },
        ),
        migrations.CreateModel(
            name='PersonalDocumentsImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_image', models.FileField(upload_to='student_personal_documents/')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.personaldocuments')),
            ],
            options={
                'db_table': 'personaldocumentsimages',
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500)),
                ('image', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('marks', models.CharField(blank=True, max_length=100, null=True)),
                ('option1', models.CharField(blank=True, max_length=500, null=True)),
                ('option2', models.CharField(blank=True, max_length=500, null=True)),
                ('option3', models.CharField(blank=True, max_length=500, null=True)),
                ('option4', models.CharField(blank=True, max_length=500, null=True)),
                ('option5', models.CharField(blank=True, max_length=500, null=True)),
                ('option6', models.CharField(blank=True, max_length=500, null=True)),
                ('shortanswer', models.CharField(blank=True, max_length=999, null=True)),
                ('answer', models.CharField(blank=True, max_length=99, null=True)),
                ('difficultylevel', models.CharField(blank=True, max_length=100, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.examination')),
            ],
            options={
                'db_table': 'questions',
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.countries')),
            ],
            options={
                'db_table': 'states',
            },
        ),
        migrations.AddField(
            model_name='otherstudent',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='super_admin.states'),
        ),
        migrations.AddField(
            model_name='cities',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.states'),
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='Offline', max_length=10)),
                ('last_login', models.CharField(blank=True, max_length=50, null=True)),
                ('last_logout', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'status',
            },
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sem', models.CharField(blank=True, max_length=3, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.course')),
            ],
            options={
                'db_table': 'stream',
            },
        ),
        migrations.AddField(
            model_name='examination',
            name='stream',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.stream'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=100, null=True)),
                ('dateofbirth', models.DateField(blank=True, null=True)),
                ('mobile', models.CharField(max_length=14, unique=True)),
                ('alternate_mobile1', models.CharField(blank=True, max_length=14, null=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('alternateemail', models.EmailField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, max_length=15, null=True)),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('alternateaddress', models.CharField(blank=True, max_length=500, null=True)),
                ('nationality', models.CharField(blank=True, max_length=20, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('registration_id', models.CharField(max_length=20, unique=True)),
                ('old_university_enrollment_id', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('new_university_enrollment_id', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('enrollment_id', models.CharField(max_length=20, unique=True)),
                ('enrollment_date', models.DateField(auto_now=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='student_image/')),
                ('verified', models.BooleanField(default=False)),
                ('is_enrolled', models.BooleanField(default=False)),
                ('archive', models.BooleanField(default=False)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('student_remarks', models.CharField(default='', max_length=500)),
                ('registration_number', models.CharField(default='', max_length=100)),
                ('is_quick_register', models.BooleanField(default=False)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='super_admin.cities')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='super_admin.countries')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='super_admin.states')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.university')),
            ],
            options={
                'db_table': 'students',
            },
        ),
        migrations.CreateModel(
            name='ResultUploaded',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=50)),
                ('examination', models.CharField(max_length=50)),
                ('semyear', models.CharField(max_length=20)),
                ('uploaded', models.CharField(max_length=10)),
                ('remarks', models.CharField(max_length=1000)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'resultuploaded',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_question', models.CharField(max_length=10)),
                ('attempted', models.CharField(max_length=10)),
                ('total_marks', models.CharField(blank=True, max_length=100, null=True)),
                ('score', models.CharField(max_length=10)),
                ('result', models.CharField(max_length=10)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('percentage', models.FloatField(default=100)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.examination')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'result',
            },
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secondary_year', models.CharField(blank=True, max_length=10, null=True)),
                ('sr_year', models.CharField(blank=True, max_length=10, null=True)),
                ('under_year', models.CharField(blank=True, max_length=10, null=True)),
                ('post_year', models.CharField(blank=True, max_length=10, null=True)),
                ('mphil_year', models.CharField(blank=True, max_length=10, null=True)),
                ('others_year', models.CharField(blank=True, max_length=10, null=True)),
                ('secondary_board', models.CharField(blank=True, max_length=50, null=True)),
                ('sr_board', models.CharField(blank=True, max_length=50, null=True)),
                ('under_board', models.CharField(blank=True, max_length=50, null=True)),
                ('post_board', models.CharField(blank=True, max_length=50, null=True)),
                ('mphil_board', models.CharField(blank=True, max_length=50, null=True)),
                ('others_board', models.CharField(blank=True, max_length=50, null=True)),
                ('secondary_percentage', models.CharField(blank=True, max_length=10, null=True)),
                ('sr_percentage', models.CharField(blank=True, max_length=10, null=True)),
                ('under_percentage', models.CharField(blank=True, max_length=10, null=True)),
                ('post_percentage', models.CharField(blank=True, max_length=10, null=True)),
                ('mphil_percentage', models.CharField(blank=True, max_length=10, null=True)),
                ('others_percentage', models.CharField(blank=True, max_length=10, null=True)),
                ('secondary_document', models.FileField(blank=True, null=True, upload_to='University_Documents/')),
                ('sr_document', models.FileField(blank=True, null=True, upload_to='University_Documents/')),
                ('under_document', models.FileField(blank=True, null=True, upload_to='University_Documents/')),
                ('post_document', models.FileField(blank=True, null=True, upload_to='University_Documents/')),
                ('mphil_document', models.FileField(blank=True, null=True, upload_to='University_Documents/')),
                ('others_document', models.FileField(blank=True, null=True, upload_to='University_Documents/')),
                ('others', models.JSONField(blank=True, default=list, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'qualification',
            },
        ),
        migrations.AddField(
            model_name='personaldocuments',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student'),
        ),
        migrations.CreateModel(
            name='PaymentReciept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_for', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_categories', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=30, null=True)),
                ('fee_reciept_type', models.CharField(blank=True, max_length=30, null=True)),
                ('transaction_date', models.CharField(blank=True, max_length=20, null=True)),
                ('cheque_no', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=50, null=True)),
                ('semyearfees', models.CharField(blank=True, max_length=10, null=True)),
                ('paidamount', models.CharField(blank=True, max_length=10, null=True)),
                ('pendingamount', models.CharField(blank=True, max_length=10, null=True)),
                ('advanceamount', models.CharField(blank=True, max_length=10, null=True)),
                ('transactiontime', models.DateTimeField(auto_now=True)),
                ('transactionID', models.CharField(max_length=50)),
                ('paymentmode', models.CharField(default='Online', max_length=20)),
                ('remarks', models.CharField(blank=True, max_length=500, null=True)),
                ('session', models.CharField(blank=True, max_length=100, null=True)),
                ('semyear', models.CharField(blank=True, max_length=10, null=True)),
                ('uncleared_amount', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'paymentreciept',
            },
        ),
        migrations.CreateModel(
            name='EmailSentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
                ('amount', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(max_length=100)),
                ('subject', models.CharField(blank=True, max_length=100, null=True)),
                ('body', models.CharField(blank=True, max_length=5000, null=True)),
                ('payment_categories', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=100, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'emailsenthistory',
            },
        ),
        migrations.CreateModel(
            name='Descriptive_Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500)),
                ('upload', models.FileField(blank=True, null=True, upload_to='examination_uploads/')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.examination')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'descriptive_answer',
            },
        ),
        migrations.CreateModel(
            name='Courier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_name', models.CharField(blank=True, max_length=100, null=True)),
                ('courier_from', models.CharField(blank=True, max_length=100, null=True)),
                ('courier_to', models.CharField(blank=True, max_length=100, null=True)),
                ('booking_date', models.CharField(blank=True, max_length=100, null=True)),
                ('courier_company', models.CharField(blank=True, max_length=100, null=True)),
                ('tracking_id', models.CharField(blank=True, max_length=100, null=True)),
                ('remarks', models.CharField(blank=True, max_length=100, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'courier',
            },
        ),
        migrations.CreateModel(
            name='AddmissionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'addmissiontype',
            },
        ),
        migrations.CreateModel(
            name='AdditionalEnrollmentDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counselor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('reference_name', models.CharField(blank=True, max_length=100, null=True)),
                ('session', models.CharField(blank=True, max_length=100, null=True)),
                ('entry_mode', models.CharField(blank=True, max_length=100, null=True)),
                ('old_university_enrollment_id', models.CharField(blank=True, max_length=30, null=True)),
                ('university_enrollment_id', models.CharField(blank=True, max_length=30, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'additionalenrollmentdetails',
            },
        ),
        migrations.CreateModel(
            name='StudentAppearingExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.JSONField(blank=True, default=list, null=True)),
                ('examstarttime', models.TimeField(blank=True, null=True)),
                ('examendtime', models.TimeField(blank=True, null=True)),
                ('examstartdate', models.DateField(blank=True, null=True)),
                ('examenddate', models.DateField(blank=True, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.examination')),
            ],
            options={
                'db_table': 'studentappearingexam',
            },
        ),
        migrations.CreateModel(
            name='StudentDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.CharField(max_length=50)),
                ('document_name', models.CharField(blank=True, max_length=50, null=True)),
                ('document_ID_no', models.CharField(blank=True, max_length=50, null=True)),
                ('document_image_front', models.FileField(blank=True, null=True, upload_to='student_documents/')),
                ('document_image_back', models.FileField(blank=True, null=True, upload_to='student_documents/')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'studentdocuments',
            },
        ),
        migrations.CreateModel(
            name='StudentExaminationTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam', models.CharField(max_length=100)),
                ('time_in_minutes', models.CharField(max_length=100)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'studentexaminationtime',
            },
        ),
        migrations.CreateModel(
            name='StudentSyllabus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=10)),
                ('pdf', models.FileField(blank=True, null=True, upload_to='studentsyllabus/')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'studentsyllabus',
            },
        ),
        migrations.CreateModel(
            name='StudyPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'studypattern',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('code', models.CharField(max_length=50)),
                ('studypattern', models.CharField(blank=True, max_length=20, null=True)),
                ('semyear', models.CharField(blank=True, max_length=20, null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.stream')),
            ],
            options={
                'db_table': 'subject',
            },
        ),
        migrations.AddField(
            model_name='examination',
            name='subject',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='super_admin.subject'),
        ),
        migrations.CreateModel(
            name='SubmittedExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('marks', models.CharField(blank=True, max_length=100, null=True)),
                ('marks_obtained', models.CharField(blank=True, max_length=100, null=True)),
                ('submitted_answer', models.CharField(blank=True, max_length=999, null=True)),
                ('answer', models.CharField(blank=True, max_length=999, null=True)),
                ('result', models.CharField(blank=True, max_length=100, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.examination')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'submitted_answer',
            },
        ),
        migrations.CreateModel(
            name='SubStream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.stream')),
            ],
            options={
                'db_table': 'substream',
            },
        ),
        migrations.AddField(
            model_name='subject',
            name='substream',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='super_admin.substream'),
        ),
        migrations.CreateModel(
            name='StudentFees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studypattern', models.CharField(max_length=20)),
                ('tutionfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('examinationfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('bookfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('resittingfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('entrancefees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('extrafees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('discount', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('totalfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('sem', models.CharField(max_length=10)),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.stream')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
                ('substream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='super_admin.substream')),
            ],
            options={
                'db_table': 'studentfees',
            },
        ),
        migrations.CreateModel(
            name='SemesterFees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutionfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('examinationfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('bookfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('resittingfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('entrancefees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('extrafees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('discount', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('totalfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('sem', models.CharField(max_length=10)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.stream')),
                ('substream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='super_admin.substream')),
            ],
            options={
                'db_table': 'semesterfees',
            },
        ),
        migrations.AddField(
            model_name='examination',
            name='substream',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='super_admin.substream'),
        ),
        migrations.CreateModel(
            name='Enrolled',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_pattern', models.CharField(max_length=20)),
                ('session', models.CharField(blank=True, max_length=100, null=True)),
                ('entry_mode', models.CharField(blank=True, max_length=100, null=True)),
                ('total_semyear', models.CharField(blank=True, max_length=3, null=True)),
                ('current_semyear', models.CharField(max_length=3)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.course')),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.stream')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
                ('substream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='super_admin.substream')),
            ],
            options={
                'db_table': 'enrolled',
            },
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=10)),
                ('pdf', models.FileField(blank=True, null=True, upload_to='syllabus/')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.course')),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.stream')),
            ],
            options={
                'db_table': 'syllabus',
            },
        ),
        migrations.CreateModel(
            name='TempTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transactionID', models.CharField(max_length=100)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'temptransaction',
            },
        ),
        migrations.CreateModel(
            name='TestPaymentGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transactionID', models.CharField(max_length=50)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'testpaymentgateway',
            },
        ),
        migrations.AddField(
            model_name='examination',
            name='university',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.university'),
        ),
        migrations.AddField(
            model_name='course',
            name='university',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.university'),
        ),
        migrations.CreateModel(
            name='UniversityEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=10)),
                ('course_id', models.CharField(blank=True, max_length=20, null=True)),
                ('course_name', models.CharField(blank=True, max_length=50, null=True)),
                ('enrollment_id', models.CharField(max_length=20)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'universityenrollment',
            },
        ),
        migrations.CreateModel(
            name='UniversityExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('amount', models.CharField(max_length=15)),
                ('date', models.CharField(max_length=50)),
                ('examination', models.CharField(max_length=50)),
                ('semyear', models.CharField(max_length=20)),
                ('paymentmode', models.CharField(max_length=50)),
                ('remarks', models.CharField(max_length=1000)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.student')),
            ],
            options={
                'db_table': 'universityexamination',
            },
        ),
        migrations.CreateModel(
            name='YearFees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutionfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('examinationfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('bookfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('resittingfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('entrancefees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('extrafees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('discount', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('totalfees', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('year', models.CharField(max_length=10)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super_admin.stream')),
                ('substream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='super_admin.substream')),
            ],
            options={
                'db_table': 'yearfees',
            },
        ),
    ]
